{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/global.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".carddemoBasicUsage .card-media {\\r\\n    background-color: #999999; \\r\\n}\\r\\n\\r\\n.example-form-field {\\r\\n    width: 200px;\\r\\n}\\r\\n\\r\\n.row {\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n    margin-right: -15px;\\r\\n    margin-left: -15px;\\r\\n}\\r\\n\\r\\n.col-md-6 {\\r\\n    flex: 0 0 50%;\\r\\n    max-width: 50%;\\r\\n}\\r\\n\\r\\n.col-md-12 {\\r\\n    flex: 0 0 100%;\\r\\n    max-width: 100%;\\r\\n}\\r\\n\\r\\n.col-md-4 {\\r\\n    flex: 0 0 33%;\\r\\n    max-width: 33%;\\r\\n}\\r\\n\\r\\n.col-md-3 {\\r\\n    flex: 0 0 25%;\\r\\n    max-width: 25%;\\r\\n}\\r\\n\\r\\n.error-help {\\r\\n    width: 90%;\\r\\n    padding-left: 5%;\\r\\n    text-align: right\\r\\n}\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Material+Icons\\\" />\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    {{ title }}\\n  </h1>\\n</div>\\n\\n<mat-card style=\\\"margin:2em;padding-top:0;padding-left:0;padding-right:0\\\" class=\\\"example-card\\\">\\n  <mat-card-title style=\\\"background:rgba(0,0,0,.06); padding:10px 10px;\\\">Get Company Balance</mat-card-title>\\n  <mat-card-content style=\\\"padding:1em;\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <mat-form-field class=\\\"example-form-field\\\" style=\\\"width: 90%;padding-left: 5%\\\">\\n          <input matInput type=\\\"text\\\" placeholder=\\\"Company Name\\\" name=\\\"companyName\\\" [(ngModel)]=\\\"companyName\\\" (input)=\\\"disableError($event)\\\">\\n        </mat-form-field>\\n        <div class=\\\"example-form-field error-help\\\" *ngIf=\\\"!isCompanyNamePresent\\\">Company Name is Required</div>\\n      </div>\\n\\n      <div class=\\\"col-md-6\\\">\\n        <mat-form-field class=\\\"example-form-field\\\" style=\\\"width: 90%;padding-left: 5%\\\">\\n          <input [disabled]=\\\"true\\\" matInput type=\\\"text\\\" name=\\\"companyBalance\\\" [(ngModel)]=\\\"companyBalance\\\" placeholder=\\\"Balance will be auto-populated\\\">\\n        </mat-form-field>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\" style=\\\"padding-left: 2.5%\\\">\\n        <button mat-raised-button type=\\\"submit\\\" (click)=\\\"getBalance()\\\">Submit</button>\\n        <button mat-raised-button type=\\\"submit\\\" name=\\\"clearGetBalance\\\" (click)=\\\"resetFields($event)\\\" style=\\\"margin-left: 2%\\\">Clear</button>\\n      </div>\\n    </div>\\n    \\n  </mat-card-content>\\n</mat-card>\\n\\n\\n<mat-card style=\\\"margin:2em;padding-top:0;padding-left:0;padding-right:0\\\" class=\\\"example-card\\\">\\n  <mat-card-title style=\\\"background:rgba(0,0,0,.06); padding:10px 10px;\\\">Transfer Balance</mat-card-title>\\n  <mat-card-content style=\\\"padding:1em;\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <mat-form-field class=\\\"example-form-field\\\" style=\\\"width: 90%;padding-left: 5%\\\">\\n          <input matInput type=\\\"text\\\" placeholder=\\\"From Company Name\\\" name=\\\"fromCompanyName\\\" [(ngModel)]=\\\"fromCompanyName\\\" (input)=\\\"disableError($event)\\\">\\n        </mat-form-field>\\n        <div class=\\\"example-form-field error-help\\\" *ngIf=\\\"!isFromCompanyNamePresent\\\">From Company Name is Required</div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <mat-form-field class=\\\"example-form-field\\\" style=\\\"width: 90%;padding-left: 5%\\\">\\n          <input matInput type=\\\"text\\\" placeholder=\\\"To Company Name\\\" name=\\\"toCompanyName\\\" [(ngModel)]=\\\"toCompanyName\\\" (input)=\\\"disableError($event)\\\">\\n        </mat-form-field>\\n        <div class=\\\"example-form-field error-help\\\" *ngIf=\\\"!isToCompanyNamePresent\\\">To Company Name is Required</div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <mat-form-field class=\\\"example-form-field\\\" style=\\\"width: 90%;padding-left: 5%\\\">\\n          <input matInput type=\\\"number\\\" placeholder=\\\"Amount to be transferred\\\" name=\\\"amountToBeTransferred\\\" [(ngModel)]=\\\"amountToBeTransferred\\\" (input)=\\\"disableError($event)\\\">\\n        </mat-form-field>\\n        <div class=\\\"example-form-field error-help\\\" *ngIf=\\\"!isAmountPresent\\\">Amount to be transferred is Required, range is >0 & <=1000 </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-12\\\" style=\\\"padding-left: 0.5%\\\">\\n      <button mat-raised-button type=\\\"submit\\\" (click)=\\\"transferBalance()\\\">Submit</button>\\n      <button mat-raised-button type=\\\"submit\\\" name=\\\"clearTransferBalance\\\" (click)=\\\"resetFields($event)\\\" style=\\\"margin-left: 2%\\\">Clear</button>\\n    </div>\\n  </mat-card-content>\\n</mat-card>\\n<ngx-spinner bdColor=\\\"rgba(51, 51, 51, 0.8)\\\" size=\\\"large\\\" color=\\\"#fff\\\" type=\\\"ball-newton-cradle\\\"></ngx-spinner>\"","import { Component } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { NgxSpinnerService } from 'ngx-spinner'\nimport swal from 'sweetalert2';\nimport {Global} from '../global';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = \"Netting Scenario\";\n  value = \"\";\n  companyName = \"\";\n  companyBalance = \"\";\n  fromCompanyName = \"\";\n  toCompanyName = \"\";\n  amountToBeTransferred = 1;\n\n  isAmountPresent = true;\n  isToCompanyNamePresent = true;\n  isFromCompanyNamePresent = true;\n  isCompanyNamePresent = true;\n\n  constructor(private http: Http, private spinner: NgxSpinnerService) { }\n\n  getBalance() {\n    if (this.companyName.trim().length > 0) {\n      this.spinner.show();\n      this.http.get(Global.SERVICE_ENDPOINT+'/getAmount/?companyName=' + this.companyName.trim()).subscribe((data) => {\n        this.companyBalance = data.json();\n        this.spinner.hide();\n      }, (err) => {\n        console.log(err);\n        var body = JSON.parse(err.text());\n        console.log(body);\n        console.log(body.error);\n        console.log(body.error.message);\n\n        this.spinner.hide();\n        swal({\n          title: body.error.message,\n          text: \"\",\n          timer: 2000,\n          showConfirmButton: false\n        }).catch(swal.noop)\n      });\n    } else {\n      this.isCompanyNamePresent = false;\n    }\n  }\n\n  transferBalance() {\n    (this.fromCompanyName.trim().length > 0) ? (this.isFromCompanyNamePresent = true) : (this.isFromCompanyNamePresent = false);\n    (this.toCompanyName.trim().length > 0) ? (this.isToCompanyNamePresent = true) : (this.isToCompanyNamePresent = false);\n    (this.amountToBeTransferred > 0 && this.amountToBeTransferred <= 1000) ? (this.isAmountPresent = true) : (this.isAmountPresent = false);\n\n    if (this.fromCompanyName.trim().length > 0 && this.toCompanyName.trim().length > 0 && this.amountToBeTransferred > 0 && this.amountToBeTransferred <= 1000) {\n      this.spinner.show();\n      this.http.post(Global.SERVICE_ENDPOINT+'/transferAmount', { 'fromCompanyName': this.fromCompanyName.trim(), 'toCompanyName': this.toCompanyName.trim(), 'amount': this.amountToBeTransferred }).subscribe((data) => {\n        var body = JSON.parse(data.text());\n        this.spinner.hide();\n        swal({\n          title: body.message,\n          text: \"\",\n          timer: 2000,\n          showConfirmButton: false\n        }).catch(swal.noop)\n      }, (err) => {\n        console.log(err);\n\n        var body = JSON.parse(err.text());\n        console.log(body);\n        console.log(body.error);\n        console.log(body.error.message);\n        \n        this.spinner.hide();\n        if(body.isSettleUp === true){\n          swal({\n            title: body.message,\n            text: \"Do you want to settle up the balance?\",\n            type: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Settle up'\n          }).then((result) => {\n            if (result.value) {\n              this.http.post(Global.SERVICE_ENDPOINT+'/settleUpBalance', { 'companyName': this.fromCompanyName.trim()}).subscribe((data) => {\n                console.log(data);\n              })\n            }\n          })\n        }else{\n          swal({\n            title: body.error.message,\n            text: \"\",\n            timer: 2000,\n            showConfirmButton: false\n          }).catch(swal.noop)\n        }\n      });\n    }\n  }\n\n  disableError(event) {\n    switch (event.target.name) {\n      case 'companyName':\n        (this.companyName.trim().length > 0) ? (this.isCompanyNamePresent = true) : (this.isCompanyNamePresent = false)\n        break;\n      case 'fromCompanyName':\n        (this.fromCompanyName.trim().length > 0) ? (this.isFromCompanyNamePresent = true) : (this.isFromCompanyNamePresent = false)\n        break;\n      case 'toCompanyName':\n        (this.toCompanyName.trim().length > 0) ? (this.isToCompanyNamePresent = true) : (this.isToCompanyNamePresent = false)\n        break;\n      case 'amountToBeTransferred':\n        (this.amountToBeTransferred > 0 && this.amountToBeTransferred <= 1000) ? (this.isAmountPresent = true) : (this.isAmountPresent = false)\n    }\n  }\n\n  resetFields(event){\n    switch (event.target.name) {\n      case 'clearGetBalance':\n        this.companyName = '';\n        this.companyBalance = '';\n        break;\n      case 'clearTransferBalance':\n        this.fromCompanyName = '';\n        this.toCompanyName = '';\n        this.amountToBeTransferred = 1;\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { HttpModule } from '@angular/http';\nimport { NgxSpinnerModule } from 'ngx-spinner'\n\nimport {\n  MatCardModule,\n  MatIconModule,\n  MatButtonModule,\n  MatInputModule\n} from '@angular/material';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatIconModule,\n    MatButtonModule,\n    MatInputModule,\n    FormsModule,\n    HttpModule,\n    NgxSpinnerModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export class Global {\r\n    public static SERVICE_ENDPOINT='http://localhost:3000';\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}